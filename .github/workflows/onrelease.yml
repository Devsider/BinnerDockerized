name: Download and Add Assets

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Asset URLs
        id: get-assets
        run: |
          ALL_ASSETS_URL=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" "https://api.github.com/repos/replaysMike/Binner/releases" | jq -r '.[] | .assets[] | .browser_download_url')
          while IFS= read -r URL; do
            echo "asset_urls+=($URL)" >> $GITHUB_ENV
            echo "Found asset URL: $URL"
          done <<< "$ALL_ASSETS_URL"

      - name: Process Asset URLs
        id: process-assets
        run: |
          ASSET_URLS=("${asset_urls[@]}")
          for URL in "${ASSET_URLS[@]}"; do
            echo "Processing asset: $URL"

            # Extract platform information from the asset URL
            PLATFORM=$(echo "$URL" | awk -F_ '{print $2}')

            # Set up the Dockerfile based on the platform
            if [[ $PLATFORM == "linux-arm" ]]; then
              DOCKERFILE_PATH="./dockerfiles/Dockerfile-linux-arm"
              BASE_IMAGE="arm32v7/ubuntu:14.04"
            elif [[ $PLATFORM == "linux-arm64" ]]; then
              DOCKERFILE_PATH="./dockerfiles/Dockerfile-linux-arm64"
              BASE_IMAGE="arm64v8/ubuntu:14.04"
            else
              DOCKERFILE_PATH="./dockerfiles/Dockerfile-x64"
              BASE_IMAGE="ubuntu:14.04"
            fi

            # Create the Dockerfile directory if it doesn't exist
            mkdir -p ./dockerfiles

            # Create the Dockerfile
            echo "FROM $BASE_IMAGE" > "$DOCKERFILE_PATH"
            echo "RUN curl -L -o /app.tar.gz $URL" >> "$DOCKERFILE_PATH"
            echo "RUN tar zxfp /app.tar.gz" >> "$DOCKERFILE_PATH"
            echo "RUN chmod +x /install-as-service.sh" >> "$DOCKERFILE_PATH"
            echo "EXPOSE 8090" >> "$DOCKERFILE_PATH"
            echo "CMD /Binner.Web" >> "$DOCKERFILE_PATH"

            # Debug output for each asset URL
            echo "Dockerfile for $URL:"
            cat "$DOCKERFILE_PATH"
            echo "---"

          done

      - name: Commit and Push
        run: |
          git add ./dockerfiles
          git commit -m "Add Dockerfiles"
          git push

      - name: Set Asset URLs Output
        run: |
          ASSET_URLS=("${asset_urls[@]}")
          OUTPUT=""
          for URL in "${ASSET_URLS[@]}"; do
            OUTPUT+="$URL,"
          done
          echo "asset_urls=${OUTPUT%,}" >> $GITHUB_ENV

      - name: Debug Output
        run: |
          echo "Debug Output:"
          echo "asset_urls=${OUTPUT%,}"
          cat ./dockerfiles/*
